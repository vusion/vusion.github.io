"undefined"==typeof window||window.ICON_FONT_STYLE?"undefined"!=typeof window&&window.ICON_FONT_STYLE&&window.ICON_FONT_STYLE.update&&window.ICON_FONT_STYLE.update({fontName:"vusion-icon-font",styleContent:'@font-face {\n\tfont-family: "vusion-icon-font";\n\tsrc:url("/public/vusion-icon-font.ttf?3d02953e747bbfe9edc13761bb7ff1de") format("truetype"),\n\turl("/public/vusion-icon-font.eot?3d02953e747bbfe9edc13761bb7ff1de#iefix") format("embedded-opentype"),\n\turl("/public/vusion-icon-font.woff?3d02953e747bbfe9edc13761bb7ff1de") format("woff"),\n\turl("/public/vusion-icon-font.svg?3d02953e747bbfe9edc13761bb7ff1de#vusion-icon-font") format("svg");\n}'}):window.ICON_FONT_STYLE={fontName:"vusion-icon-font",styleContent:'@font-face {\n\tfont-family: "vusion-icon-font";\n\tsrc:url("/public/vusion-icon-font.ttf?3d02953e747bbfe9edc13761bb7ff1de") format("truetype"),\n\turl("/public/vusion-icon-font.eot?3d02953e747bbfe9edc13761bb7ff1de#iefix") format("embedded-opentype"),\n\turl("/public/vusion-icon-font.woff?3d02953e747bbfe9edc13761bb7ff1de") format("woff"),\n\turl("/public/vusion-icon-font.svg?3d02953e747bbfe9edc13761bb7ff1de#vusion-icon-font") format("svg");\n}'},webpackJsonp([46],{416:function(s,t,e){function i(s){return(s||window.ICON_FONT_STYLE).styleContent||""}function n(s){var t=document.createElement("style"),e=document.getElementsByTagName("head")[0];t.innerHTML=i(s),t.id=o,t.type="text/css",e?e.appendChild(t):window.addEventListener("load",function(){e.appendChild(t)})}var o="ICON-FONT-FILE-STYLE";s.exports=function(){window.HAS_CREATE_FONT_STYLE||(n(),window.HAS_CREATE_FONT_STYLE=!0)}},449:function(s,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i={render:function(){var s=this.$createElement,t=this._self._c||s;return t("u-article",[t("h1",[this._v("组件库")]),t("h3",[this._v("适用范围")]),t("p",[this._v("我们在做某个项目的时候，通常会把项目中的通用组件放在一个地方进行统一管理。这便是"),t("strong",[this._v("项目级别")]),this._v("的组件库。")]),t("p",[this._v("随着一个产品项目数量的增多，为了保证交互视觉的一致性并且减少开发成本，就需要把这些项目中的通用组件抽出来放在单独的仓库中进行统一管理。这便是"),t("strong",[this._v("产品级别")]),this._v("的组件库。")]),t("p",[this._v("多个产品之间总有一些组件，交互逻辑相似，而视觉上差异较大。我们也可以将视觉简化，保留下交互逻辑和设计好的 API，构成原型组件库，方便各产品扩展。这便是"),t("strong",[this._v("跨产品级别")]),this._v("的组件库。")]),t("h3",[this._v("目录结构")]),t("p",[this._v("为了让以上三种级别的组件库能够形成派生关系，并且组件能在其中平滑迁移，它们必须有相同的结构。")]),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[this._v("library/\n├─ index.js                         # 索引文件\n├─ base/                            # 基础配置\n│   ├─ global.css                   # CSS 的全局变量。将会注入到每个 CSS 文件中，请不要添加除变量声明之外的内容，否则会产生大量的 CSS\n│   ├─ base.css                     # 基础 CSS 排版样式。\n├─ category/                        # 二级目录，用于分类\n│   ├─ u-search-box.vue\n│   ├─ u-timeline.vue\n│   └─ ...\n├─ u-select.vue                     # Select 组件\n├─ u-select-item.vue\n├─ u-pagination.vue                 # Pagination 组件\n└─ ...                              # 其它组件\n")])]),t("p",[this._v("组件库在 App 项目中一般对应"),t("code",{pre:!0},[this._v("src/components")]),this._v("目录，在 UI Library 项目中一般对应"),t("code",{pre:!0},[this._v("src")]),this._v("目录。路径可以用"),t("code",{pre:!0},[this._v("libraryPath")]),this._v("字段进行配置。")]),t("p",[this._v("组件库中建议最多只包括二级目录，如果有更深层的目录，可以考虑将组件放在页面模块中。")]),t("h3",[this._v("索引文件")]),t("p",[this._v("索引文件为一个简单的 ES6 模块，它仅仅用于引入和导出组件，不处理别的工作。")]),t("p",[this._v("下面为一个索引文件的例子：")]),t("pre",{pre:!0,attrs:{class:"hljs lang-js"}},[t("code",{attrs:{"v-pre":""}},[t("span",{attrs:{class:"hljs-keyword"}},[this._v("export")]),this._v(" * "),t("span",{attrs:{class:"hljs-keyword"}},[this._v("from")]),this._v(" "),t("span",{attrs:{class:"hljs-string"}},[this._v("'proto-ui.vusion'")]),this._v(";\n\n"),t("span",{attrs:{class:"hljs-keyword"}},[this._v("import")]),this._v(" Select "),t("span",{attrs:{class:"hljs-keyword"}},[this._v("from")]),this._v(" "),t("span",{attrs:{class:"hljs-string"}},[this._v("'./u-select.vue'")]),this._v(";\n"),t("span",{attrs:{class:"hljs-keyword"}},[this._v("import")]),this._v(" SelectItem "),t("span",{attrs:{class:"hljs-keyword"}},[this._v("from")]),this._v(" "),t("span",{attrs:{class:"hljs-string"}},[this._v("'./u-select-item.vue'")]),this._v(";\n"),t("span",{attrs:{class:"hljs-keyword"}},[this._v("import")]),this._v(" Well "),t("span",{attrs:{class:"hljs-keyword"}},[this._v("from")]),this._v(" "),t("span",{attrs:{class:"hljs-string"}},[this._v("'./u-well.vue'")]),this._v(";\n\n"),t("span",{attrs:{class:"hljs-keyword"}},[this._v("export")]),this._v(" {\n    Select,\n    SelectItem,\n    Well,\n};\n")])]),t("p",[this._v("如果要将这个库中的组件注册到 Vue 全局，只需使用"),t("code",{pre:!0},[this._v("vusion-utils")]),this._v("的"),t("code",{pre:!0},[this._v("installComponents")]),this._v("：")]),t("pre",{pre:!0,attrs:{class:"hljs lang-js"}},[t("code",{attrs:{"v-pre":""}},[t("span",{attrs:{class:"hljs-keyword"}},[this._v("import")]),this._v(" Vue "),t("span",{attrs:{class:"hljs-keyword"}},[this._v("from")]),this._v(" "),t("span",{attrs:{class:"hljs-string"}},[this._v("'vue'")]),this._v(";\n\n"),t("span",{attrs:{class:"hljs-keyword"}},[this._v("import")]),this._v(" * "),t("span",{attrs:{class:"hljs-keyword"}},[this._v("as")]),this._v(" Components "),t("span",{attrs:{class:"hljs-keyword"}},[this._v("from")]),this._v(" "),t("span",{attrs:{class:"hljs-string"}},[this._v("'library'")]),this._v(";\n"),t("span",{attrs:{class:"hljs-keyword"}},[this._v("import")]),this._v(" { installComponents } "),t("span",{attrs:{class:"hljs-keyword"}},[this._v("from")]),this._v(" "),t("span",{attrs:{class:"hljs-string"}},[this._v("'vusion-utils'")]),this._v(";\ninstallComponents(Components, Vue);\n")])]),t("p",[t("code",{pre:!0},[this._v("library")]),this._v("是 Vusion 在 Webpack 中为"),t("code",{pre:!0},[this._v("libraryPath")]),this._v("自动添加的别名。")]),t("h3",[this._v("设计方案")]),t("p",[t("code",{pre:!0},[this._v("base/global.css")]),this._v("文件用于定义 CSS 的全局变量，它与视觉设计中的配色、尺寸等设计方案是对应。它可以通过引入别的组件库的设计方案来继承。")]),t("p",[this._v("为了能够灵活调整设计方案，比如主题色、圆角等等，我们不允许在具体的组件中直接引用它（这样会形成固定的依赖关系），而是用一个 loader 在每个 CSS 文件中注入它。因此，也请不要在"),t("code",{pre:!0},[this._v("global.css")]),this._v("中添加除变量声明之外的内容，否则会产生大量的 CSS。")]),t("h3",[this._v("基础排版")]),t("p",[t("code",{pre:!0},[this._v("base/base.css")]),this._v("文件用于设置 CSS 的基础排版，如网页的默认颜色、字号、边距等等。它也可以通过引入别的组件库的基础排版来继承。")]),t("p",[this._v("推荐继承"),t("code",{pre:!0},[this._v("proto-ui")]),this._v("中的"),t("code",{pre:!0},[this._v("base.css")]),this._v("，它仅对"),t("code",{pre:!0},[this._v("normalize.css")]),this._v("做了一些简单的扩展，统一使用"),t("code",{pre:!0},[this._v("box-sizing: border-box")]),this._v("属性等。")]),t("p",[this._v("比如下面为一个简单的"),t("code",{pre:!0},[this._v("base.css")]),this._v("文件的例子：")]),t("pre",{pre:!0,attrs:{class:"hljs lang-css"}},[t("code",{attrs:{"v-pre":""}},[this._v("@import 'proto-ui.vusion/src/base/base.css';\n\nbody {\n    color: #333;\n}\n")])]),t("h3",[this._v("下一步")]),t("p",[this._v("接下来将会讲述组件库中的"),t("u-link",{attrs:{href:"/guides/components"}},[this._v("组件")]),this._v("的一些技术细节。")],1)])},staticRenderFns:[]},n=e(1)(null,i,!1,null,null,null);t.default=n.exports}});